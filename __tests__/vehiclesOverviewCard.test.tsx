import { VehiclesOverviewCard } from "@/app/_components/cards/VehiclesOverviewCard";
import "@testing-library/jest-dom";
import { expect, test } from "@jest/globals";

test("Row span calculation for VehicleOverviewCard", () => {
  expect(VehiclesOverviewCard([]).props.style["gridRowEnd"]).toBe("span 5");

  expect(
    VehiclesOverviewCard([
      {
        type: "car",
        make: "a",
        model: "a",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "car",
        make: "b",
        model: "b",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "car",
        make: "c",
        model: "c",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
    ]).props.style["gridRowEnd"]
  ).toBe("span 8");

  expect(
    VehiclesOverviewCard([
      {
        type: "car",
        make: "a",
        model: "a",
        sell_price: 1,
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "car",
        make: "b",
        model: "b",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "car",
        make: "c",
        model: "c",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
    ]).props.style["gridRowEnd"]
  ).toBe("span 11");

  expect(
    VehiclesOverviewCard([
      {
        type: "car",
        make: "a",
        model: "a",
        sell_date: "2010-10-10",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "car",
        make: "b",
        model: "b",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "motorcycle",
        make: "c",
        model: "c",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
    ]).props.style["gridRowEnd"]
  ).toBe("span 12");

  expect(
    VehiclesOverviewCard([
      {
        type: "car",
        make: "a",
        model: "a",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "car",
        make: "b",
        model: "b",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
      {
        type: "motorcycle",
        make: "c",
        model: "c",
        row: 0,
        trim: "",
        year: 0,
        color: "",
        plate: "",
        vin: "",
        fuel_type: "",
        purchase_date: "",
        purchase_price: 0,
        sell_date: "",
        sell_price: 0,
        avg_mileage: 0,
        avg_consumption: 0,
        refuel_data: [],
        odometer_data: [],
        insurance_data: [],
        maintenance_data: [],
        accident_data: [],
        ticket_data: [],
        details: false,
      },
    ]).props.style["gridRowEnd"]
  ).toBe("span 9");
});
